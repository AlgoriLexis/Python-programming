import cv2

# Cargar imagen
imagen = cv2.imread('imagen.jpg')

# Aplicar filtro de blanco y negro
imagen_bn = cv2.cvtColor(imagen, cv2.COLOR_BGR2GRAY)

# Realizar recorte de imagen
recorte = imagen[100:300, 200:400]

# Ajustar brillo y contraste
brillo = 50
contraste = 1.5
imagen_brillo_contraste = cv2.addWeighted(imagen, contraste, imagen, 0, brillo)

# Ejemplo de detecci√≥n de objetos (usando Haar cascades)
cascada = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')
gris = cv2.cvtColor(imagen, cv2.COLOR_BGR2GRAY)
caras = cascada.detectMultiScale(gris, scaleFactor=1.1, minNeighbors=5)
for (x, y, w, h) in caras:
    cv2.rectangle(imagen, (x, y), (x+w, y+h), (0, 255, 0), 2)

# Mostrar imagen original y procesada
cv2.imshow('Imagen original', imagen)
cv2.imshow('Imagen blanco y negro', imagen_bn)
cv2.imshow('Recorte', recorte)
cv2.imshow('Imagen con brillo y contraste ajustados', imagen_brillo_contraste)
cv2.waitKey(0)
cv2.destroyAllWindows()
